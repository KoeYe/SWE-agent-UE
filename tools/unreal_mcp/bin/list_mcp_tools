#!/usr/bin/env python3
"""
List available MCP tools from Unreal Engine MCP server via HTTP.
"""

import json
import sys
import requests
import os

# MCP Server URL - can be configured via environment variable
MCP_SERVER_URL = os.getenv('UNREAL_MCP_URL', 'http://localhost:9000/sse')

def list_mcp_tools() -> None:
    """List all available MCP tools via HTTP request."""
    try:
        # Prepare the request payload
        payload = {
            "method": "tools/list",
            "params": {}
        }

        # Make HTTP request to MCP server
        response = requests.post(
            f"{MCP_SERVER_URL}",
            json=payload,
            headers={"Content-Type": "application/json"},
            timeout=5
        )

        if response.status_code == 200:
            result = response.json()
            
            if "result" in result and "tools" in result["result"]:
                tools = result["result"]["tools"]
                
                print("Available Unreal Engine MCP Tools:")
                print("=" * 40)

                if not tools:
                    print("‚ö†Ô∏è  No MCP tools found")
                    return
                
                for tool in tools:
                    print(f"üîß {tool['name']}")
                    if 'description' in tool:
                        print(f"   üìù {tool['description']}")
                    
                    if 'inputSchema' in tool and tool['inputSchema']:
                        properties = tool['inputSchema'].get('properties', {})
                        if properties:
                            print("   üìã Parameters:")
                            for param_name, param_info in properties.items():
                                param_type = param_info.get('type', 'unknown')
                                param_desc = param_info.get('description', 'No description')
                                required = param_name in tool['inputSchema'].get('required', [])
                                required_str = " ‚≠ê" if required else " ‚ö™"
                                print(f"     ‚Ä¢ {param_name} ({param_type}){required_str}: {param_desc}")
                    print()
                    
                print(f"‚úÖ Found {len(tools)} MCP tools available")
            else:
                print("‚ùå Invalid response format from MCP server")
        else:
            print(f"‚ùå Error listing MCP tools: HTTP {response.status_code}")
            if response.text:
                print(f"Response: {response.text}")
                
    except requests.exceptions.ConnectionError:
        print(f"‚ùå Error: Cannot connect to MCP server at {MCP_SERVER_URL}")
        print("Make sure the Unreal MCP server is running")
    except requests.exceptions.Timeout:
        print(f"‚ùå Error: Timeout connecting to MCP server")
    except Exception as e:
        print(f"‚ùå Error listing MCP tools: {e}")

def main():
    list_mcp_tools()

if __name__ == "__main__":
    main()
